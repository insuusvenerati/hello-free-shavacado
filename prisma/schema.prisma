datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique", "jsonProtocol"]
}

model Token {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  token     String   @unique
}

model User {
  id               String           @id @default(cuid())
  email            String           @unique
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  imageUrl         String?
  colorScheme      String?
  gridSize         String?
  recipePageLayout String?
  gridLayout       String?
  password         Password?
  favoriteRecipes  FavoriteRecipe[]
  ImportedRecipe   ImportedRecipe[]
  CreatedRecipe    CreatedRecipe[]
}

model Password {
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model FavoriteRecipe {
  id       String @id @default(cuid())
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  user     User[]
  recipeId String @unique
}

model ImportedRecipeCategory {
  id             String           @id @default(cuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String           @unique
  ImportedRecipe ImportedRecipe[]
}

model ImportedRecipeCuisine {
  id             String           @id @default(cuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String           @unique
  ImportedRecipe ImportedRecipe[]
}

model ImportedRecipeIngredient {
  id             String           @id @default(cuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String           @unique
  ImportedRecipe ImportedRecipe[]
}

model ImportedRecipeStep {
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  index            Int
  caption          String?
  ImportedRecipe   ImportedRecipe @relation(fields: [importedRecipeId], references: [id], onDelete: Cascade)
  importedRecipeId String

  @@id([importedRecipeId, index])
}

model ImportedRecipeKeyword {
  id             String           @id @default(cuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String           @unique
  ImportedRecipe ImportedRecipe[]
}

model ImportedRecipe {
  id                      String                     @id @default(cuid())
  createdAt               DateTime                   @default(now())
  updatedAt               DateTime                   @updatedAt
  name                    String
  image                   String?
  description             String?
  cookTime                String?
  prepTime                String?
  totalTime               String?
  recipeCategories        ImportedRecipeCategory[]
  recipeCuisines          ImportedRecipeCuisine[]
  recipeIngredients       ImportedRecipeIngredient[]
  recipeInstructions      ImportedRecipeStep[]
  keywords                ImportedRecipeKeyword[]
  recipeYield             String
  cookTimeOriginalFormat  String?
  prepTimeOriginalFormat  String?
  totalTimeOriginalFormat String?
  url                     String                     @unique
  user                    User                       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                  String
}

model CreatedRecipe {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String?
  difficulty  String?
  ingredients String?
  steps       String?
  imageUrl    String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Recipe {
  id             String           @id @default(cuid())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  name           String
  description    String
  difficulty     Int
  seoDescription String?
  imagePath      String
  ratingsCount   Int?
  averageRating  Float?
  favoritesCount Int?
  totalTime      String?
  prepTime       String?
  slug           String
  allergens      Allergen[]
  ingredients    Ingredient[]
  nutrition      String
  tags           Tag[]
  steps          Step[]
  category       Category?        @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  cuisines       Cuisine[]
  categoryId     String?
  favoriteRecipe FavoriteRecipe[]
}

model Ingredient {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  type         String?
  slug         String?
  description  String?
  imageLink    String?
  imagePath    String?
  Recipe       Recipe[]
  recipeId     String?
  stepRecipeId String?
  stepIndex    Int?
}

model Tag {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  Recipe    Recipe[]
  recipeId  String
}

model Step {
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  index                Int
  instructions         String
  instructionsHTML     String?
  instructionsMarkdown String?
  Recipe               Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId             String

  @@id(fields: [recipeId, index])
}

model Category {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  iconPath  String?
  Recipe    Recipe[]
}

model Cuisine {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  iconPath  String?
  Recipe    Recipe[]
  recipeId  String?
}

model Allergen {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  iconPath  String?
  Recipe    Recipe[]
  recipeId  String?
}
