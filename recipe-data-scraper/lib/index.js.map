{"mappings":"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","sources":["src/main.ts","src/scrapers/MicrodataScraper.js","src/scrapers/Scraper.js","src/dataTransformers/buildRecipeModel.js","src/dataTransformers/consolidateRecipeProperties.js","src/utils/logger.js","src/dataTransformers/propertyTransformerMap.js","src/dataTransformers/transformImage.js","src/dataTransformers/transformToList.js","src/dataTransformers/transformToString.js","src/dataTransformers/transformToTime.js","src/utils/transformIsoToString.js","src/dataTransformers/transformToCleanString.js","src/utils/cleanString.js","src/utils/regex.js","src/dataTransformers/transformInstructions.js","src/dataTransformers/transformIngredients.js","src/utils/cleanIngredientAmounts.js","src/scrapers/JsonLdScraper.js"],"sourcesContent":["import axios from \"axios\";\nimport { load } from \"cheerio\";\nimport MicrodataScraper from \"./scrapers/MicrodataScraper\";\nimport JsonLdScraper from \"./scrapers/JsonLdScraper\";\nimport logger from \"./utils/logger\";\nimport type { CheerioAPI } from \"cheerio\";\n\nconst errorMessage = \"Could not find recipe data\";\n\nexport type Recipe = {\n  url: string;\n  name: string;\n  image: string;\n  description: string;\n  cookTime: string;\n  prepTime: string;\n  totalTime: string;\n  recipeYield: string;\n  recipeIngredients: string[];\n  recipeInstructions: string[];\n  recipeCategories: string[];\n  recipeCuisines: string[];\n  recipeTypes: string[];\n  keywords: string[];\n};\n\nexport default async (url: string): Promise<Recipe> => {\n  let chtml: CheerioAPI;\n\n  try {\n    // load html from scraped url\n    const resp = await axios(url);\n\n    chtml = load(resp.data);\n  } catch (error) {\n    throw new Error(errorMessage);\n  }\n\n  try {\n    // attempt to find JsonLd data, return recipe or log and continue\n    const jsonLdScraper = new JsonLdScraper(chtml);\n    const recipe = jsonLdScraper.getRecipe();\n\n    return {\n      ...(recipe as Omit<Recipe, \"url\">),\n      url,\n    };\n  } catch (error) {\n    logger(\"main:JsonLdScraper\", {\n      error,\n      url,\n    });\n  }\n\n  // attempt to find microdata, return recipe or log and continue\n  try {\n    const microdataScraper = new MicrodataScraper(chtml);\n    const recipe = microdataScraper.getRecipe();\n\n    return {\n      ...recipe,\n      url,\n    };\n  } catch (error) {\n    logger(\"main:MicrodataScraper\", {\n      error,\n      url,\n    });\n  }\n\n  // could add a Scraper for rdfa in the future\n\n  // throw if no recipe found\n  throw new Error(errorMessage);\n};\n","import microdata from 'microdata-node';\nimport Scraper from './Scraper';\n\nclass MicrodataScraper extends Scraper {\n  constructor(chtml) {\n    super(chtml);\n    this.type = 'microdata';\n  }\n\n  testForMetadata() {\n    const meta = microdata.toJson(this.chtml.html());\n    if (!meta || !meta.items || !meta.items[0]) {\n      return;\n    }\n    this.meta = meta;\n  }\n\n  findRecipeItem() {\n    const recipe = Object.values(this.meta.items).find(item => (item.type[0].indexOf('Recipe') > -1));\n    this.recipeItem = (recipe) ? recipe.properties : null;\n  }\n}\n\nexport default MicrodataScraper;\n","import buildRecipeModel from \"../dataTransformers/buildRecipeModel\";\nimport logger from \"../utils/logger\";\n\n/*\n  class to be extended by scraper classes\n    the following must be implemented by the child class:\n      testForMetadata:\n        this function scrapes the type of metadata particular to the class\n        and assigns the data to this.meta\n      findRecipeItem\n        this function should parse the metadata and assign recipe item to this.recipeItem\n*/\nclass Scraper {\n  constructor(chtml) {\n    this.chtml = chtml;\n\n    this.meta = null;\n    this.recipeItem = null;\n\n    if (!this.testForMetadata) {\n      throw {\n        message: \"testForMetadata function must be implemented by child class\",\n      };\n    }\n\n    if (!this.findRecipeItem) {\n      throw {\n        message: \"findRecipeItem function must be implemented by child class\",\n      };\n    }\n  }\n\n  getRecipe() {\n    this.testForMetadata();\n\n    if (!this.meta) {\n      throw {\n        message: \"no meta data was found\",\n        type: this.type,\n      };\n    }\n\n    this.findRecipeItem();\n    if (!this.recipeItem) {\n      throw {\n        message: \"found metadata, but no recipe information\",\n        type: this.type,\n      };\n    }\n\n    try {\n      this.finalRecipe = buildRecipeModel(this.recipeItem);\n\n      return this.finalRecipe;\n    } catch (error) {\n      throw {\n        message: \"found recipe information, there was a problem with mapping the data\",\n        type: this.type,\n      };\n    }\n  }\n\n  print() {\n    if (this.recipeItem) {\n      logger(\" - - - - - - - - - - - - \");\n      logger(\"original recipe data\");\n      logger(`type: ${this.type}`);\n      logger(this.recipeItem);\n      logger(\" - - - - - - - - - - - - \");\n    }\n\n    if (this.finalRecipe) {\n      logger(\" ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ \");\n      logger(\"transformed recipe data\");\n      logger(this.finalRecipe);\n      logger(\" ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ \");\n    }\n  }\n}\n\nexport default Scraper;\n","import consolidateRecipeProperties from './consolidateRecipeProperties';\nimport propertyTransformerMap from './propertyTransformerMap';\n\nconst buildRecipeModel = (prospectiveProperties) => {\n  const recipe = consolidateRecipeProperties(prospectiveProperties);\n\n  // parse and transform the property values\n  const transformedRecipe = {};\n  Object.entries(recipe).forEach(([key, value]) => {\n    const propertyTransformer = propertyTransformerMap[key];\n    if (propertyTransformer && value) {\n      transformedRecipe[key] = propertyTransformer(value, key);\n    }\n  });\n\n  return transformedRecipe;\n};\n\nexport default buildRecipeModel;\n","import logger from '../utils/logger';\n\nexport const consolidateRecipeProperties = (prospectiveProperties) => {\n  const {\n    url,\n    name,\n    image,\n    photo,\n    thumbnailUrl,\n    description,\n    cookTime,\n    prepTime,\n    totalTime,\n    recipeYield,\n    yield: rYield,\n    recipeIngredients,\n    recipeIngredient,\n    ingredients,\n    ingredient,\n    recipeInstructions,\n    instructions,\n    step,\n    recipeCategory,\n    recipeCuisine,\n    recipeType,\n    keywords,\n    tag,\n  } = prospectiveProperties;\n\n  if (step) {\n    // didn't find any recipes that use step\n    logger('buildRecipeModel:may need extra parsing for step property');\n  }\n\n  // consolidate the properties into new model\n  return {\n    url,\n    name, // string\n    image: image || photo || thumbnailUrl, // string\n    description, // string\n    cookTime, // string\n    cookTimeOriginalFormat: cookTime, // string\n    prepTime, // string\n    prepTimeOriginalFormat: prepTime, // string\n    totalTime, // string\n    totalTimeOriginalFormat: totalTime, // string\n    recipeYield: recipeYield || rYield, // string\n    recipeIngredients: recipeIngredient || recipeIngredients || ingredients || ingredient, // array of strings\n    recipeInstructions: recipeInstructions || instructions || step, // array of strings\n    recipeCategories: recipeCategory, // array of strings\n    recipeCuisines: recipeCuisine, // array of strings\n    recipeTypes: recipeType, // array of strings\n    keywords: keywords || tag, // array of strings\n  };\n};\n\nexport default consolidateRecipeProperties;\n","const isLoggingEnabled = process.env.LOGGING_ENABLED === 'true';\n\nconst logger = (...args) => {\n  if (isLoggingEnabled) {\n    console.log(...args);\n  }\n};\n\nexport default logger;\n","import transformImage from './transformImage';\nimport transformToList from './transformToList';\nimport transformToString from './transformToString';\nimport transformToTime from './transformToTime';\nimport transformToCleanString from './transformToCleanString';\nimport transformInstructions from './transformInstructions';\nimport transformIngredients from './transformIngredients';\n\nconst propertyTransformerMap = {\n  name: transformToString,\n  image: transformImage, // can just be string OR object with url, caption, width, height, thumbnail can be an array of strings\n  description: transformToCleanString,\n  cookTime: transformToTime,\n  prepTime: transformToTime,\n  totalTime: transformToTime,\n  cookTimeOriginalFormat: transformToString,\n  prepTimeOriginalFormat: transformToString,\n  totalTimeOriginalFormat: transformToString,\n  recipeYield: transformToString,\n  recipeIngredients: transformIngredients,\n  recipeInstructions: transformInstructions, // could be an array howtosteps - each has text with string\n  recipeCategories: transformToList, // array\n  recipeCuisines: transformToList, // array\n  recipeTypes: transformToList,\n  keywords: transformToList,\n};\n\nexport default propertyTransformerMap;\n","import logger from '../utils/logger';\n\nfunction transformImage(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (value.url) {\n    return value.url;\n  }\n\n  if (Array.isArray(value)) {\n    return value[0];\n  }\n\n  logger('image in another format', value);\n  return value;\n}\n\nexport default transformImage;\n","import logger from '../utils/logger';\n\nfunction transformToList(value, key) {\n  if (typeof value === 'string') {\n    if (value.includes(',')) {\n      return value.split(',').map(item => item.trim());\n    }\n\n    return [value];\n  }\n  if (Array.isArray(value)) {\n    return value;\n  }\n  logger('another format needed', key);\n  return value;\n}\n\nexport default transformToList;\n","import logger from '../utils/logger';\n\nfunction transformToString(value, key) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value[0];\n  }\n  logger('another format needed', key);\n  return value;\n}\n\nexport default transformToString;\n","import logger from '../utils/logger';\nimport { parse } from 'iso8601-duration';\nimport transformToString from './transformToString';\nimport transformISOToString from '../utils/transformIsoToString';\n\nfunction transformToTime(value, key) {\n  const time = transformToString(value);\n  try {\n    const parsedISODuration = parse(time);\n    if (parsedISODuration) {\n      return transformISOToString(parsedISODuration);\n    }\n  } catch (error) {\n    // fail silently and return original time\n    logger(`ISO date parsing failure for ${key}`);\n  }\n\n  return time;\n}\n\nexport default transformToTime;\n","export default function transformISOToString(dateObj = {}) {\n  let date = '';\n\n  if (dateObj.days) {\n    date += dateObj.days > 1 ? `${dateObj.days} days ` : `${dateObj.days} day `;\n  }\n\n  if (dateObj.hours) {\n    date += dateObj.hours > 1 ? `${dateObj.hours} hours ` : `${dateObj.hours} hour `;\n  }\n\n  if (dateObj.minutes) {\n    date += dateObj.minutes > 1 ? `${dateObj.minutes} minutes ` : `${dateObj.minutes} minute `;\n  }\n\n  if (dateObj.seconds) {\n    date += dateObj.seconds > 1 ? `${dateObj.seconds} seconds ` : `${dateObj.seconds} second `;\n  }\n\n  return date.trim();\n}\n","import cleanString from '../utils/cleanString';\nimport transformToString from './transformToString';\n\nfunction transformToCleanString(value, key) {\n  return cleanString(transformToString(value, key));\n}\n\nexport default transformToCleanString;\n","import { MATCH_HTML_TAGS, MATCH_LINE_BREAK, MATCH_MULTI_SPACE } from './regex';\n\n// for transformInstructions\nexport default function cleanString(str) {\n  return str\n    .replace(MATCH_HTML_TAGS, '') // remove html\n    .replace(MATCH_LINE_BREAK, ' ') // replace line breaks with spaces\n    .replace(MATCH_MULTI_SPACE, ' ') // replace multiple spaces with single spaces\n    .trim();\n}\n","/*\n  <[^>]*>?\n  match html tags on either side of a string\n\n  (\\r\\n|\\n|\\r)\n  match new line characters\n\n  \\s\\s+\n  match multiple spaces or tabs\n\n  &nbsp;\n  match &nbsp;\n\n  g\n  global\n\n  m\n  multiline\n*/\n\nexport const MATCH_HTML_TAGS = /<[^>]*>?/gm;\nexport const MATCH_LINE_BREAK = /(\\r\\n|\\n|\\r)/gm;\nexport const MATCH_MULTI_SPACE = /&nbsp;|\\s\\s+/gm; // or &nbsp;\n","import logger from '../utils/logger';\nimport cleanString from '../utils/cleanString';\n\nfunction transformInstructions(value) {\n  if (typeof value === 'string') {\n    const cleanedValue = cleanString(value);\n    if (cleanedValue.includes('.,')) {\n      // special case for kingarthurflour.com\n      return cleanedValue.split('.,').map(item => item.trim());\n    }\n\n    return [cleanedValue];\n  }\n\n  if (Array.isArray(value)) {\n    // microdata\n    const firstItem = value[0];\n    if (typeof firstItem === 'string') {\n      return value.map(item => cleanString(item)); // loop through items and clean\n    }\n\n    // json ld\n    return value.map(item => {\n      if (item.text) {\n        return cleanString(item.text);\n      } else {\n        logger('recipe instructions array has different format', value);\n      }\n    });\n  }\n}\n\nexport default transformInstructions;\n","import cleanIngredientAmounts from '../utils/cleanIngredientAmounts';\nimport logger from '../utils/logger';\n\nconst transformIngredients = (value) => {\n  // jsonld\n  if (value && typeof value[0] === 'string') {\n    return value.map(item => cleanIngredientAmounts(item));\n  }\n\n  // array of objects (microdata)\n  const mappedItems = [];\n\n  Object.entries(value).forEach(([, item]) => {\n    if (item.properties) {\n      const { name, amount } = item.properties;\n      if (name || amount) {\n        const _name = name && name[0];\n        const _amount = amount && amount[0];\n        const singleLine = _amount ? `${_amount} ${_name}` : _name;\n        mappedItems.push(cleanIngredientAmounts(singleLine));\n      }\n    }\n  });\n  // log issue\n  if (mappedItems.length) {\n    return mappedItems;\n  }\n\n  logger('transformIngredients:microdata:item without properties', value);\n  return [];\n};\n\nexport default transformIngredients;\n","import { MATCH_HTML_TAGS, MATCH_MULTI_SPACE } from './regex';\n\nconst cleanIngredientAmounts = (line) => line\n  .replace(/¼/g, '1/4')\n  .replace(/½/g, '1/2')\n  .replace(/¾/g, '3/4')\n  .replace(/⅔/g, '2/3')\n  .replace(MATCH_HTML_TAGS, '')\n  .replace(MATCH_MULTI_SPACE, ' ')\n  .trim();\n\nexport default cleanIngredientAmounts;\n","import logger from '../utils/logger';\nimport Scraper from './Scraper';\n\nclass JsonLdScraper extends Scraper {\n  constructor(chtml) {\n    super(chtml);\n    this.type = 'jsonld';\n  }\n\n  testForMetadata() {\n    var json = [];\n    const jsonLdFromHtml = this.chtml('script[type=\"application/ld+json\"]');\n\n    Object.entries(jsonLdFromHtml).forEach(([ , item]) => {\n      let contents;\n      try {\n        if (item && item.children && item.children[0] && item.children[0].data) {\n          contents = JSON.parse(item.children[0].data);\n        }\n      } catch (e) {\n        logger('JsonLd: error parsing the json data', e);\n        // Fail silently, in case there are valid tags\n        return;\n      }\n      if (contents) {\n        json.push(contents);\n      }\n    });\n\n    if (json.length === 0) {\n      logger('Error: No JSON-LD valid script tags present on page');\n      return;\n    }\n\n    this.meta = json.length > 1 ? json : json[0];\n  }\n\n  findRecipeItem() {\n    if (this.meta['@type'] === 'Recipe') {\n      // nytimes, food.com, bonappetite, ohsheglows, simplyrecipes\n      this.recipeItem = this.meta;\n      return;\n    }\n    // @graph: king arthur, 12tomatoes, sallysbaking, cookie&kate\n    // other: martha stewart, foodnetwork, eatingwell, allrecipes, myrecipes, seriouseats, skinnytaste\n    const graphLevel = this.meta['@graph'] || this.meta;\n    this.recipeItem = Object.values(graphLevel).find(item => (item['@type'] === 'Recipe'));\n  }\n}\n\nexport default JsonLdScraper;\n"],"names":[],"version":3,"file":"index.js.map"}